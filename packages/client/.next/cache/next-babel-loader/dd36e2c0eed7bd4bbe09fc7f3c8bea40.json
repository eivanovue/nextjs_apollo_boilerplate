{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport Layout from '../components/Layout';\nimport gql from 'graphql-tag';\nimport { withApollo } from '../apollo/apollo';\nvar QUERY = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query GetHello {\\n    hello\\n  }\\n\"])));\n\nvar NOSSR = function NOSSR() {\n  _s();\n\n  var _useQuery = useQuery(QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      refetch = _useQuery.refetch;\n\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"Error: \", error.message);\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"This should be rendered on client side\"), __jsx(\"pre\", null, \"Data: \", data.hello), __jsx(\"button\", {\n    onClick: function onClick() {\n      return refetch();\n    }\n  }, \"Refetch\"));\n};\n\n_s(NOSSR, \"Jp+fcJk/QxZ1Qx0OR1h5O02cnEU=\", false, function () {\n  return [useQuery];\n});\n\n_c = NOSSR;\nexport default withApollo({\n  ssr: false\n})(NOSSR);\n\nvar _c;\n\n$RefreshReg$(_c, \"NOSSR\");","map":{"version":3,"sources":["C:/Users/eivanovue/Coding/nextjs_apollo_boilerplate/packages/client/pages/index.tsx"],"names":["React","useQuery","Layout","gql","withApollo","QUERY","NOSSR","data","loading","error","refetch","message","hello","ssr"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,IAAMC,KAAK,GAAGF,GAAH,2GAAX;;AAMA,IAAMG,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB,kBAA0CL,QAAQ,CAACI,KAAD,CAAlD;AAAA,MAAQE,IAAR,aAAQA,IAAR;AAAA,MAAcC,OAAd,aAAcA,OAAd;AAAA,MAAuBC,KAAvB,aAAuBA,KAAvB;AAAA,MAA8BC,OAA9B,aAA8BA,OAA9B;;AAEA,MAAIF,OAAJ,EAAa,OAAO,8BAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,4BAAWA,KAAK,CAACE,OAAjB,CAAP;AAEX,SACE,MAAC,MAAD,QACE,2DADF,EAEE,6BAAYJ,IAAI,CAACK,KAAjB,CAFF,EAGE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMF,OAAO,EAAb;AAAA;AAAjB,eAHF,CADF;AAOD,CAbD;;GAAMJ,K;UACsCL,Q;;;KADtCK,K;AAeN,eAAeF,UAAU,CAAC;AAAES,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2BP,KAA3B,CAAf","sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Layout from '../components/Layout';\r\nimport gql from 'graphql-tag';\r\nimport { withApollo } from '../apollo/apollo';\r\n\r\nconst QUERY = gql`\r\n  query GetHello {\r\n    hello\r\n  }\r\n`;\r\n\r\nconst NOSSR = () => {\r\n  const { data, loading, error, refetch } = useQuery(QUERY);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>This should be rendered on client side</h1>\r\n      <pre>Data: {data.hello}</pre>\r\n      <button onClick={() => refetch()}>Refetch</button>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withApollo({ ssr: false })(NOSSR);\r\n"]},"metadata":{},"sourceType":"module"}